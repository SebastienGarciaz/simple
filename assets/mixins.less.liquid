// ==========================================================================
// Custom mixins
// ==========================================================================

// Clearfix
// ---------------------------------------
// Source: http://nicolasgallagher.com/micro-clearfix-hack/
// For modern browsers
// 1. The space content is one way to avoid an Opera bug when the
//    contenteditable attribute is included anywhere else in the document.
//    Otherwise it causes space to appear at the top and bottom of elements
//    that are clearfixed.
// 2. The use of `table` rather than `block` is only necessary if using
//    `:before` to contain the top-margins of child elements.
.clearfix() {
    &:before,
    &:after {
        content: " "; // 1
        display: table; // 2
        line-height: 0;
    }
    &:after {
        clear: both;
    }
}

// Font size rem plugin with px fallback
// Requires html element to have a font-size of 62.5% to reset to 10px
// ---------------------------------------
.font-size(@font-size: 16){
    @rem: (@font-size / 10);
    font-size: @font-size * 1px;
    font-size: ~"@{rem}rem";
}

// Font smoothing
// ---------------------------------------
.font-smoothing(@mode: on) when (@mode = on) {
	-moz-osx-font-smoothing: grayscale;
	-webkit-font-smoothing: antialiased;
}
.font-smoothing(@mode: on) when (@mode = off) {
	-moz-osx-font-smoothing: auto;
	-webkit-font-smoothing: subpixel-antialiased;
}

// Tab focus styles
// ---------------------------------------
.tab-focus() {
	outline: thin dotted @gray;
	outline-offset: 1px;
}

// Basic CSS Arrows (using purely border)
// ---------------------------------------
.arrow(@position, @color: transparent, @size: 8px) {
    position: relative;
	
	&::after {
		content: "";
        display: block;
        position: absolute;
        left: 50%;
        margin-left: -@size;
        width: 0;
        height: 0;
        border-style: solid;
        transition: inherit;
	}
}
// Top arrow
.arrow(@position, @color: transparent, @size: 8px) when (@position = top) {
    &::after {
    	top: -@size;
        border-width: 0 @size @size @size;
        border-color: transparent transparent @color;
    }
}
// Bottom arrow
.arrow(@position, @color: transparent, @size: 8px) when (@position = bottom) {
    &::after {
    	bottom: -@size;
        border-width: @size @size 0 @size;
        border-color: @color transparent transparent;
    }
}
// Left arrow
.arrow(@position, @color: transparent, @size: 8px) when (@position = left) {
    &::after {
    	left: 0;
    	top: 50%;
    	margin-top: -@size;
        border-width: @size @size @size 0;
        border-color: transparent @color transparent transparent;
    }
}
// Right arrow
.arrow(@position, @color: transparent, @size: 8px) when (@position = right) {
    &::after {
    	left: auto;
    	right: 0;
    	top: 50%;
    	margin-top: -@size;
    	margin-right: -@size;
    	margin-left: 0;
        border-width: @size 0 @size @size;
        border-color: transparent transparent transparent @color;
    }
}

// Form control focus state
//
// Generate a customized focus state and for any input with the specified color,
// which defaults to the `@input-border-focus` variable.
//
// We highly encourage you to not customize the default value, but instead use
// this to tweak colors on an as-needed basis. This aesthetic change is based on
// WebKit's default styles, but applicable to a wider range of browsers. Its
// usability and accessibility should be taken into account with any change.
//
// Example usage: change the default blue border and shadow to white for better
// contrast against a dark gray background.
.form-control-focus(@color: @input-border-focus) {
    &:focus {
        border-color: @color;
        outline: 0;
    }
}

// Placeholder text
.placeholder(@color: @input-color-placeholder) {
    &::-moz-placeholder           { color: @color; font-weight: 400;   // Firefox
                                  opacity: 1; } // See https://github.com/twbs/bootstrap/pull/11526
    &:-ms-input-placeholder       { color: @color; font-weight: 400; } // Internet Explorer 10+
    &::-webkit-input-placeholder  { color: @color; font-weight: 400; } // Safari and Chrome
}